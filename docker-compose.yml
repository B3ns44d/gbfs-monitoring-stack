services:
  exporter:
    build:
      context: ./exporter
      dockerfile: Dockerfile
    container_name: gbfs-exporter
    restart: unless-stopped
    env_file:
      - .env
    command: >
      --config /src/configs/providers.yaml
      --port 8000
    volumes:
      - ./exporter/configs/providers.yaml:/src/configs/providers.yaml
    ports:
      - "8000:8000"
    networks:
      - monitoring
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --web.enable-admin-api
    volumes:
      - ./infra/deployment/roles/gbfs_stack/templates/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/deployment/roles/gbfs_stack/templates/grafana/provisioning:/etc/grafana/provisioning
      - ./infra/deployment/roles/gbfs_stack/templates/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
